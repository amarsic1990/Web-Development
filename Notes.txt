*** Front end web development***
ne pisati kod s tutorijalom već razumijeti što se događa
raditi zabilješke
server racunalo koje pruza informacije na netu
klijent racunalo koje korisnik koristi za pristup stranicama

klijent --> INTERNET SERVICE PROVIDER --> DNS SERVER

html --> struktura web stranice
css --> stiliziranje web stranice
js --> ponašanje/napraviti stvari...

"mdn, w3 schools, devdocs.io" dodat na kraju kako googleamo nesta za HTML

<br> --> self closing tag novi redak
<hr size="3"> --> self closing tag horizontalna linija, size="3" je html atribut

! + ENTER --> da inserta sve doctype, head, body...

https://docs.emmet.io/cheat-sheet/

https://unicode-table.com/en/

description od stranice se pojavljuje u tražilicama

umisto bolda koristiti strong umisto italic koristit emphasis <em>

ul --> unordered list
ol --> ordered list ("a,b,c", "1,2,3")
li --> list item

thead --> table head --> tu dodajemo imena stupaca... "th" umisto "td" ide u headeru za table data
tbody --> table body

HTML form  --> sekcija dokumenta  koja sadrzi interaktivne kontrole za submitanje informacija
u form-i je najvazniji input.... on je self closing tag!!!!!!!!!


<!--da bi pohranili informaciju moramo imati neki input....  type inputa je text-->
        <input type="text" name ="" value="">
        <input type="color" name ="" value="">
        <br>
        <label>Do you want to sign up to the email list?</label>
        <input type="checkbox" name="" id="">
        <br>
        <label>Password:</label>
        <input type="password" name="" id="">
        <br>
        <input type="date" name="" id=""> <!--za odabrati datum-->
        <br>
        <input type="datetime-local" name="" id="">
        <br>
        <input type="email" name="" id=""> <!--text box za email-->
        <br>
        <input type="file" name="" id=""> <!--za uploadati file-->

        <input type="image" src="" alt="">
        <br>
        <label>radio</label>
        <input type="radio" name="" id="">
        <br>
        <label for="">range</label>
        <input type="range" name="" id="">
        <br>
        <label for="">search</label>
        <input type="search" name="" id="">
        <input type="submit">
		
		
		
podaci u formi su enkodirani u PLAIN TEKSTU pa je enctype="text/plain"



CSS
background-color: --> pozadinska boja
radius --> 100% da bude okruglo

SVE NA STRANICI SU KUTIJE (BOXES)!!!
u "body"u ne mozemo minjati "height"
width --> širina
bolje je da specificiramo postotke nego hardkodirane vrijednosti


anatomija CSSa:

selector {svojstvo: vrijednost}

selektor je "TKO" --> ciji stil zelimo prominiti
svojstvo je "ŠTO" --> što želimo minjati boju linije itd.......
vrijednost "KAKO" --> kako želimo nešto prominiti

CLASS --> s njim mozemo razlikovati razlicite HTML elemente 
class odabiremo s "TOČKApaImeKlase"
ID --> da bi targetali ID u css moramo koristiti "#" pa ime ID-a... po stranici mozemo imati SAMO JEDAN ID..
class koristimo kada želimo primjeniti nek istil na grupu povezanih elemenata,
a ID koristimo kada za specifičan stil 


PSEUDO CLASS --> kada se css minja ovisno da li smo pokrili element ili ne... ":hover" je takav element da se nesta desi kada pokrijemo taj tag...

FAVICON --> ikona u tab-u https://www.favicon.cc/


DIV --> u divove dijelimo sadržaj... div je za  strukturu i dijeljenje sadržaja

css svaki HTML element tretira kao BOX 

CSS DISPLAY SVOJSTVO ima 4 vrijednosti : BLOCK, INLINE, INLINE-BLOCK i NONE

SPAN --> je inline display element... span se koristi samo u kombinaciji s css... inline element uzima samo onoliko mista koliko mu triba u (heightu i widthu)
s INLINE ELEMENTIMA ne možemo prominiti WIDTH

paragraf je po difoltu block element... možemo mu prominiti "display:inline"

INLINE-BLOCK mozemo prominiti width i da elementi budu u istoj liniji
image tretirati kao inline block elemente 

NONE --> u displayu mice element kao da nije ni postoja
"visibility: hidden" --> element se samo sakrije ali ne moze nista doci na njegovu poziciju

POSITIONING
1. content je sve --> height je odreden contentom bez obzira na width;
2. Order dolazi iz coda --> redosljed kako ide u kodu...
3. "djeca" sjede na roditeljima

imamo: static, relative, absolute i fixed positioning

svi HTML elementi po difoltu imaju static positioning
RELATIVE --> relativno u odnosu na početni položaj možemo ga maknuti (top, bottom, left, right)